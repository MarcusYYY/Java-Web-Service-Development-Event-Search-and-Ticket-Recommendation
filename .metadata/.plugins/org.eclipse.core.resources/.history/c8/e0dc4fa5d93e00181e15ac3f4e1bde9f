package external;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import org.json.JSONArray;
import org.json.JSONObject;

public class TicketMasterAPI {
	private static final String URL = "https://app.ticketmaster.com/discovery/v2/events.json";
	private static final String DEFAULT_KEYWORD = ""; // no restriction
	private static final String API_KEY = "kxD7egBxzIkcVtEvVbiJhFA3UGhBqIoUY";
	
	public JSONArray search(double lat, double lon, String keyword) {
        if (keyword == null) {
        	keyword = DEFAULT_KEYWORD;
        }
        try {
        	keyword = java.net.URLEncoder.encode(keyword, "UTF-8"); //Rick sun => Rick20%Sun
        } catch (Exception e) {
        	e.printStackTrace();
        }
        String geoHash = GeoHash.encodeGeohash(lat, lon, 9);
        String query = String.format("apikey=%s&geoPoint=%s&keyword%s&radius=%s", API_KEY, geoHash, keyword, "50");
        try {
        	HttpURLConnection connection = (HttpURLConnection)new URL(URL + "?" + query).openConnection();
        	connection.setRequestMethod("GET");
        	int responseCode = connection.getResponseCode();//get status code
            System.out.println(responseCode);
        	BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));//get the body
        	String inputLine;
        	StringBuilder response = new StringBuilder();// get the body line by line
        	while ((inputLine = in.readLine()) != null){
        		response.append(inputLine);
        	}
        	
        	JSONObject obj = new JSONObject(response.toString());
        	if (obj.isNull("_embedded")) {
        		return new JSONArray();
        	}
        	JSONObject embedded = obj.getJSONObject("_embedded");
        	if (embedded.isNull("events")) {
        		return new JSONArray();
        	}else {
        		JSONArray array = embedded.getJSONArray("events");
        		return array;
        	}
        	
        } catch (Exception e) {
        	e.printStackTrace();
        }
        return new JSONArray();
        
	}
	 
	private void queryAPI(double lat, double lon) {
		JSONArray events = search(lat, lon, null);//for debug
		try {
		    for (int i = 0; i < events.length(); i++) {
		        JSONObject event = events.getJSONObject(i);
		        System.out.println(event);
		    }
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}

}
